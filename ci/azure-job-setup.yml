# Generic setup for Azure Pipelines builds. Expected variables:
#
# - TOOLCHAIN: the rust toolchain type (e.g., "stable", "beta-x86_64-pc-windows-msvc")

steps:
- download: current

- checkout: self
  submodules: recursive

- bash: |
    set -e
    rustup set profile minimal
    rustup component remove --toolchain=$TOOLCHAIN rust-docs || echo "already removed"
    rustup update --no-self-update $TOOLCHAIN
    rustup default $TOOLCHAIN
    # Log versions
    set -ex
    rustup -V
    rustc -Vv
    cargo -V
  displayName: Set up Rust

# work around https://github.com/microsoft/azure-pipelines-tasks/issues/10653
# also note that `set -x` messes up `task.setvariable`
- bash: |
    set -euo pipefail

    PIPELINE_WORKSPACE="$(Pipeline.Workspace)"
    ARTIFACT_STAGING="$(Build.ArtifactStagingDirectory)"

    if [[ $AGENT_OS == Windows_NT ]] ; then
      PIPELINE_WORKSPACE=$(echo "$PIPELINE_WORKSPACE" | sed -e 's|\\|\/|g' -e 's|^\([A-Za-z]\)\:/\(.*\)|/\L\1\E/\2|')
      ARTIFACT_STAGING=$(echo "$ARTIFACT_STAGING" | sed -e 's|\\|\/|g' -e 's|^\([A-Za-z]\)\:/\(.*\)|/\L\1\E/\2|')
    fi

    echo "##vso[task.setvariable variable=PIPELINE_WORKSPACE;]$PIPELINE_WORKSPACE"
    echo "##vso[task.setvariable variable=ARTIFACT_STAGING;]$ARTIFACT_STAGING"
  displayName: Ensure bash-friendly variable names

- bash: |
    set -xeuo pipefail
    git switch -c release
    git pull --ff-only $PIPELINE_WORKSPACE/git-release/release.bundle
  displayName: Restore release commit
