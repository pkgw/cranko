# Cranko deployment workflows, run when all CI tests pass on the `master` or `rc
# branches. NB: right now we do nothing on `master`! (But we need a dummy job to
# keep Pipelines happy.) That could change.

parameters:
- name: isMainDev
  type: boolean
  default: false
- name: isRelease
  type: boolean
  default: false

jobs:

- ${{ if parameters.isMainDev }}:
  - job: dummy_setup_only
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: false

- ${{ if parameters.isRelease }}:
  - job: branch_and_tag
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeuo pipefail
        ./cranko release-workflow tag
        git push --tags origin release:release
      displayName: Tag and push
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: cargo_publish
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
    - bash: |
        set -xeuo pipefail
        # If `./cranko` isn't moved, Cargo will complain about the dirty
        # working directory.
        mv ./cranko /tmp/
        /tmp/cranko cargo foreach-released -- publish --no-verify
      displayName: Publish updated Cargo crates
      env:
        CARGO_REGISTRY_TOKEN: $(CARGO_REGISTRY_TOKEN)

  - job: github_releases
    dependsOn: branch_and_tag # otherwise, GitHub creates the tag itself
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeuo pipefail
        ./cranko github create-releases
        ./cranko github upload-artifacts cranko $(Pipeline.Workspace)/binary-*/*
      displayName: Create GitHub releases
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: zenodo_publish
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml

    - bash: |
        set -xeuo pipefail
        vname="cranko-$(./cranko show version cranko)"
        git archive --prefix="$vname/" -o "$vname.tar.gz" HEAD
        ./cranko zenodo upload-artifacts --metadata=ci/zenodo.json5 "$vname.tar.gz"
      displayName: Upload source tarball
      env:
        ZENODO_TOKEN: $(ZENODO_TOKEN)

    - bash: ./cranko zenodo upload-artifacts --metadata=ci/zenodo.json5 $(Pipeline.Workspace)/binary-*/*
      displayName: Upload binaries
      env:
        ZENODO_TOKEN: $(ZENODO_TOKEN)

    - bash: ./cranko zenodo publish --metadata=ci/zenodo.json5
      displayName: Publish to Zenodo
      env:
        ZENODO_TOKEN: $(ZENODO_TOKEN)

  - job: update_website
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeuo pipefail
        git fetch $(Pipeline.Workspace)/git-gh-pages/gh-pages.bundle gh-pages
        git branch -f gh-pages FETCH_HEAD
        git push --force origin gh-pages:gh-pages
      displayName: Update GitHub pages website
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
